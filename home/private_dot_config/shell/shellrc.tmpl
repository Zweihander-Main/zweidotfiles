# vim:ft=zsh
#!/usr/bin/zsh -f

# ZSH shellrc file, runs for interactive shells.

# start=$(date "+%s.%N")
# zmodload zsh/zprof

# History settings (file defined in env)
HISTCONTROL=ignoreboth # don't put duplicate lines or lines starting with space in the history.
HISTSIZE=50000
SAVEHIST=10000
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_all_dups   # Delete an old recorded event if a new event is a duplicate.
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data

# ZSH settings
DISABLE_AUTO_UPDATE="true"
ZSH_COMPDUMP="${XDG_CACHE_HOME}/zsh/zcompdump-${ZSH_VERSION}"
setopt multios                # enable redirect to multiple streams: echo >file1 >file2
setopt long_list_jobs         # show long list format job notifications
setopt interactivecomments    # recognize comments
# Suppress insecure warnings if running as root
[[ $EUID -eq 0 ]] && zstyle ':completion:*:warnings' suppress 1

# make sure completion list is loaded before anything else
zmodload zsh/complist

# All aliases, functions
source "${XDG_CONFIG_HOME}/shell/aliases"
fpath=("${XDG_CONFIG_HOME}/shell/autoload" $fpath)
autoload -Uz "${XDG_CONFIG_HOME}"/shell/autoload/*(.:t)

# vim related
set -o vi
bindkey -v
KEYTIMEOUT=1
cursor_mode
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history
bindkey -v '^?' backward-delete-char # restore backspace

autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line # hit v for vim (normal mode)

# Add vim text objects
autoload -Uz select-bracketed select-quoted
zle -N select-quoted
zle -N select-bracketed
for km in viopp visual; do
    bindkey -M $km -- '-' vi-up-line-or-history
    for c in {a,i}${(s..)^:-\'\"\`\|,./:;=+@}; do
        bindkey -M $km $c select-quoted
    done
    for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
        bindkey -M $km $c select-bracketed
    done
done

# Add vim surround
autoload -Uz surround
zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround
bindkey -M vicmd cs change-surround
bindkey -M vicmd ds delete-surround
bindkey -M vicmd ys add-surround
bindkey -M visual S add-surround

# dir related
setopt auto_cd
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushdminus

# Zinit and first time setup
if [ ! -d $ZINIT_HOME ]; then
    mkdir -p "$(dirname $ZINIT_HOME)"
    [ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"

    if [ ! -f "${XDG_DATA_HOME}/shell/history" ]; then
        mkdir -p "${XDG_DATA_HOME}/shell"
        touch "${XDG_DATA_HOME}/shell/history"
    fi
fi
source "${ZINIT_HOME}/zinit.zsh"
(( ${+_comps} )) && _comps[zinit]=_zinit

{{- if eq .install_shell_apps "true" }}

zinit light zdharma-continuum/zinit-annex-binary-symlink

{{- end }}

PS1='>' # provide a simple prompt till the theme loads
zinit wait'!0a' lucid for \
    OMZL::git.zsh \
    id-as'zwei-zeta-theme' \
    'https://raw.githubusercontent.com/Zweihander-Main/zwei-zeta-zsh-theme/master/zeta.zsh-theme'

# OMZ, colored man pages, nvm
zinit wait'0b' lucid for \
    OMZL::clipboard.zsh \
    OMZL::completion.zsh \
    OMZL::functions.zsh \
    OMZL::spectrum.zsh \
    OMZL::termsupport.zsh \
    OMZP::colored-man-pages \
    atload'add-zsh-hook chpwd check_nvmrc_and_use' \
    OMZP::nvm
zstyle ':omz:plugins:nvm' lazy yes

# Bracket Autopair
zinit wait'0b' lucid for id-as'autopair' @hlissner/zsh-autopair

# Highlights, suggestions, completions
zinit wait'0c' lucid for \
    atinit'zicompinit; zicdreplay' \
    zdharma-continuum/fast-syntax-highlighting \
    atload"_zsh_autosuggest_start; bindkey '^ ' autosuggest-accept" \
    zsh-users/zsh-autosuggestions \
    blockf atpull'zinit creinstall -q .' \
    zsh-users/zsh-completions

# FZF tab completions - should be after zsh-completions
zinit wait'0c' lucid for \
    has'fzf' \
    id-as'fzf-tab' \
    @Aloxaf/fzf-tab

# Apparish/apparix -- should be after zsh-completions and fzf-tab
zinit wait'0c' lucid for \
    id-as'apparish' blockf completions \
    atinit"sed -i 's/function bm()/function apparishbm()/g' apparish; \
    sed -i 's/apx_silent bind -q menu-complete/true/g' apparish" \
    'https://raw.githubusercontent.com/micans/apparix/main/.bourne-apparix'

if [[ $(command -v 'navi') ]]; then
    zinit wait'0c' lucid light-mode for \
        as"program" id-as'load-scripts-navi' \
        atload'eval "$(navi widget zsh)"' \
        "https://github.com/zdharma-continuum/null"
fi

if [[ $(command -v 'mcfly') ]]; then
    zinit wait'0c' lucid light-mode for \
        as"program" id-as'load-script-mcfly' \
        atload'eval "$(mcfly init zsh)"' \
        "https://github.com/zdharma-continuum/null"
fi

if [[ $(command -v 'mcfly-fzf') ]]; then
    zinit wait'0c' lucid light-mode for \
        as"program" id-as'load-scripts-mcfly-fzf' \
        atload'eval "$(mcfly-fzf init zsh)"' \
        "https://github.com/zdharma-continuum/null"
fi

if [[ $(command -v 'autojump') ]]; then
    zinit wait'0c' lucid light-mode for \
        as'program' id-as'load-script-autojump'\
        atload"source $(readlink ${XDG_STATE_HOME}/nix/profile/etc/profile.d/autojump.sh)" \
        "https://github.com/zdharma-continuum/null"
fi

if [[ $(command -v 'thefuck') ]]; then
    zinit wait'0c' lucid light-mode for \
        as'program' id-as'load-script-thefuck'\
        atload'eval "$(thefuck --alias)"' \
        "https://github.com/zdharma-continuum/null"
fi

if [[ $(command -v 'broot') ]]; then
    zinit wait'0c' lucid light-mode for \
        as'program' id-as'load-script-broot'\
        atload"source $(readlink ${XDG_STATE_HOME}/nix/profile/etc/profile.d/br.bash)" \
        "https://github.com/zdharma-continuum/null"
fi

# end=$(date "+%s.%N")
# date -u -d "0 $end sec - $start sec" +"%H:%M:%S.%N"
