#!/bin/zsh

# ZSH shellrc file, runs for interactive shells.

# performance debugging start
# start=$(date "+%s.%N")
# zmodload zsh/zprof

# History settings
HISTCONTROL=ignoreboth # don't put duplicate lines or lines starting with space in the history.
HISTSIZE=50000

# ZSH settings
ZSH_THEME="zeta"
export zeta="Î»"
DISABLE_AUTO_UPDATE="true"
ZSH_COMPDUMP="${XDG_CACHE_HOME}/zsh/zcompdump-${ZSH_VERSION}"
plugin=()


# make sure completion list is loaded before anything else
zmodload zsh/complist

# Source ZSH frameworks
source $ZSH/oh-my-zsh.sh

# Apparish for bookmarks
source "${XDG_DATA_HOME}/apparish/bourne-apparish"

# Override bm to allow for encrypted chezmoi file
function bm() {
  apparishbm "$1"
  chezmoi add --encrypt "${XDG_DATA_HOME}/apparish/apparixrc"
}

# All aliases
source "${XDG_CONFIG_HOME}/shell/aliases"

# Mkdir and move in one command
function md() { mkdir -p "$1" && cd "$1" || return; }

# fzf
[ -f "/usr/share/fzf/key-bindings.zsh" ] && source "/usr/share/fzf/key-bindings.zsh"
[ -f "/usr/share/fzf/completion.zsh" ] && source "/usr/share/fzf/completion.zsh"

# broot
[ -f "${XDG_CONFIG_HOME}/broot/launcher/bash/br" ] && source "${XDG_CONFIG_HOME}/broot/launcher/bash/br"

# mcfly
[ -f "/usr/share/doc/mcfly/mcfly.zsh" ] && eval "$(mcfly init zsh)"

# navi
[ -x "/usr/bin/navi" ] && eval "$(navi widget zsh)"

# thefuck
[ -x "/usr/bin/thefuck" ] && eval "$(thefuck --alias)"

# NVM
function load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    nvm use default
  fi

  [ -s "/usr/share/nvm/bash_completion" ] && source /usr/share/nvm/bash_completion
  [ -s "/usr/share/nvm/install-nvm-exec" ] && source /usr/share/nvm/install-nvm-exec
}

if [ -s "/usr/share/nvm/nvm.sh" ]; then
  nvm_cmds=(nvm node npm yarn)
  for cmd in $nvm_cmds; do
    alias $cmd="unalias $nvm_cmds && unset nvm_cmds && . $NVM_DIR/nvm.sh --no-use && load-nvmrc && $cmd"
  done
fi

# source plugins
fpath=("${XDG_CONFIG_HOME}/zsh/plugins" $fpath)

# vim related
set -o vi
bindkey -v
KEYTIMEOUT=1
autoload -Uz cursor_mode; cursor_mode
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

# Zinit
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit ice blockf
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-syntax-highlighting

# extra completions
# fpath=("${XDG_CONFIG_HOME}/zsh/plugins/zsh-completions/src" $fpath)

# syntax highlighting, should be at end
# source "${XDG_CONFIG_HOME}/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# performance debugging end
# end=$(date "+%s.%N")
# date -u -d "0 $end sec - $start sec" +"%H:%M:%S.%N"
