% ffmpeg, video, conversion

# Convert video from one format to another
ffmpeg \
  -i "<input>" \
  -filter:v scale=h='min(720\,ih)':w='min(1280\,iw)' \
  -vcodec libx264 \
  -preset <preset> \
  -profile:v <profile> \
  -acodec aac \
  -ac 2 \
  -ar 44100 \
  "<output>" \
  -hide_banner

# Extract the sound from a video and save it as MP3
ffmpeg -i <video_mp4> -vn <sound>.mp3

# Convert frames from a video or GIF into individual numbered images
ffmpeg -i <video_mpg_video_gif> <frame__d_png>

# Combine numbered images (frame_1.jpg, frame_2.jpg, etc) into a video or GIF
ffmpeg -i <frame__d_jpg> -f image2 <video_mpg_video_gif>

# Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image
ffmpeg -ss <mm_ss> -i <video_mp4> -frames 1 -s <128x128> -f image2 <image_png>

# Trim a video from a given start time mm:ss to an end time mm2:ss2 (omit the -to flag to trim till the end)
ffmpeg -ss <mm_ss> -to <mm2_ss2> -i <video_mp4> -codec copy <output_mp4>

# Convert AVI video to MP4. AAC Audio @ 128kbit, h264 Video @ CRF 23
ffmpeg -i <input_video>.avi -codec:audio aac -b:audio 128k -codec:video libx264 -crf 23 <output_video>.mp4

# Remux MKV video to MP4 without re-encoding audio or video streams
ffmpeg -i <input_video>.mkv -codec copy <output_video>.mp4

# Convert MP4 video to VP9 codec. For the best quality, use a CRF value (recommended range 15-35) and -b:video MUST be 0
ffmpeg -i <input_video>.mp4 -codec:video libvpx-vp9 -crf <30> -b:video 0 -codec:audio libopus -vbr on -threads <number_of_threads> <output_video>.webm

$ input : ls
$ preset : echo -e "ultrafast\nsuperfast\nveryfast\nfaster\nfast\nmedium\nslow\nslower\nveryslow"
$ profile : echo -e "baseline\nmain\nhigh"

